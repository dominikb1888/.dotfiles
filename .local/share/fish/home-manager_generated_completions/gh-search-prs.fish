# gh-search-prs
# Autogenerated from man page /nix/store/2ph1hk79h8xfv70via2075n0lz1my80v-gh-2.20.2/share/man/man1/gh-search-prs.1.gz
complete -c gh-search-prs -l app -d 'Filter by GitHub App author'
complete -c gh-search-prs -l archived -d 'Restrict search to archived repositories'
complete -c gh-search-prs -l assignee -d 'Filter by assignee'
complete -c gh-search-prs -l author -d 'Filter by author'
complete -c gh-search-prs -s B -l base -d 'Filter on base branch name'
complete -c gh-search-prs -l checks -d 'Filter based on status of the checks: {pending|success|failure}'
complete -c gh-search-prs -l closed -d 'Filter on closed at date'
complete -c gh-search-prs -l commenter -d 'Filter based on comments by user'
complete -c gh-search-prs -l comments -d 'Filter on number of comments'
complete -c gh-search-prs -l created -d 'Filter based on created at date'
complete -c gh-search-prs -l draft -d 'Filter based on draft state'
complete -c gh-search-prs -s H -l head -d 'Filter on head branch name'
complete -c gh-search-prs -l interactions -d 'Filter on number of reactions and comments'
complete -c gh-search-prs -l involves -d 'Filter based on involvement of user'
complete -c gh-search-prs -s q -l jq -d 'Filter JSON output using a jq expression'
complete -c gh-search-prs -l json -d 'Output JSON with the specified fields'
complete -c gh-search-prs -l label -d 'Filter on label'
complete -c gh-search-prs -l language -d 'Filter based on the coding language'
complete -c gh-search-prs -s L -l limit -d 'Maximum number of results to fetch'
complete -c gh-search-prs -l locked -d 'Filter on locked conversation status'
complete -c gh-search-prs -l match -d 'Restrict search to specific field of issue: {title|body|comments}'
complete -c gh-search-prs -l mentions -d 'Filter based on user mentions'
complete -c gh-search-prs -l merged -d 'Filter based on merged state'
complete -c gh-search-prs -l merged-at -d 'Filter on merged at date'
complete -c gh-search-prs -l milestone -d 'Filter by milestone title'
complete -c gh-search-prs -l no-assignee -d 'Filter on missing assignee'
complete -c gh-search-prs -l no-label -d 'Filter on missing label'
complete -c gh-search-prs -l no-milestone -d 'Filter on missing milestone'
complete -c gh-search-prs -l no-project -d 'Filter on missing project'
complete -c gh-search-prs -l order -d 'Order of results returned, ignored unless \'--sort\' flag is specified: {asc|de…'
complete -c gh-search-prs -l owner -d 'Filter on repository owner'
complete -c gh-search-prs -l project -d 'Filter on project board number'
complete -c gh-search-prs -l reactions -d 'Filter on number of reactions'
complete -c gh-search-prs -l repo -d 'Filter on repository'
complete -c gh-search-prs -l review -d 'Filter based on review status: {none|required|approved|changes_requested}'
complete -c gh-search-prs -l review-requested -d 'Filter on user or team requested to review'
complete -c gh-search-prs -l reviewed-by -d 'Filter on user who reviewed'
complete -c gh-search-prs -l sort -d 'Sort fetched results: {comments|reactions|reactions-+1|reactions--1|reactions…'
complete -c gh-search-prs -l state -d 'Filter based on state: {open|closed}'
complete -c gh-search-prs -l team-mentions -d 'Filter based on team mentions'
complete -c gh-search-prs -s t -l template -d 'Format JSON output using a Go template; see "gh help formatting"'
complete -c gh-search-prs -l updated -d 'Filter on last updated at date'
complete -c gh-search-prs -l visibility -d 'Filter based on repository visibility: {public|private|internal}'
complete -c gh-search-prs -s w -l web -d 'Open the search query in the web browser EXAMPLE # search pull requests match…'

