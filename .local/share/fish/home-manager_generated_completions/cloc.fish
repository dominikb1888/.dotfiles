# cloc
# Autogenerated from man page /nix/store/9hxmy5h21k8j0aiz5if2p7migaah5zix-cloc-1.94/share/man/man1/cloc.1.gz
complete -c cloc -l extract-with -d 'This option is only needed if cloc is unable to figure out how to extract the…'
complete -c cloc -l list-file -d 'Take the list of file and/or directory names to process from \\s-1FILE,\\s0 whi…'
complete -c cloc -l diff-list-file -d 'Take the pairs of file names to be diff\'ed from \\s-1FILE,\\s0 whose format mat…'
complete -c cloc -l vcs -d 'Invoke a system call to \\s-1VCS\\s0 to obtain a list of files to work on'
complete -c cloc -l unicode -d 'Check binary files to see if they contain Unicode expanded \\s-1ASCII\\s0 text'
complete -c cloc -l autoconf -d 'Count '
complete -c cloc -l by-file -d 'Report results for every source file encountered'
complete -c cloc -l by-file-by-lang -d 'Report results for every source file encountered in addition to reporting by …'
complete -c cloc -l config -d 'Read command line switches from \\s-1FILE\\s0 instead of the default location o…'
complete -c cloc -l count-and-diff -d 'First perform direct code counts of source file(s) of \\s-1SET1\\s0 and \\s-1SET…'
complete -c cloc -l diff -d 'Compute differences in code and comments between source file(s) of \\s-1SET1\\s…'
complete -c cloc -l diff-timeout -d 'Ignore files which take more than N seconds to process'
complete -c cloc -l docstring-as-code -d 'cloc considers docstrings to be comments, but this is not always correct as d…'
complete -c cloc -l follow-links -d '[Unix only] Follow symbolic links to directories (sym links to files are alwa…'
complete -c cloc -l force-lang -d 'Process all files that have a \\s-1EXT\\s0 extension with the counter for langu…'
complete -c cloc -l force-lang-def -d 'Load language processing filters from \\s-1FILE,\\s0 then use these filters ins…'
complete -c cloc -l git -d 'Forces the inputs to be interpreted as git targets (commit hashes, branch nam…'
complete -c cloc -l git-diff-rel -d 'Same as --git --diff, or just --diff if the inputs are recognized as git targ…'
complete -c cloc -l git-diff-all -d 'Git diff strategy #2:  compare all files in the repository between the two co…'
complete -c cloc -l ignore-whitespace -d 'Ignore horizontal white space when comparing files with --diff'
complete -c cloc -l ignore-case -d 'Ignore changes in case within file contents; consider upper- and lowercase le…'
complete -c cloc -l ignore-case-ext -d 'Ignore case of file name extensions'
complete -c cloc -l lang-no-ext -d 'Count files without extensions using the \\s-1LANG\\s0 counter'
complete -c cloc -l max-file-size -d 'Skip files larger than \\f(CW\\*(C`MB\\*(C\' megabytes when traversing directories'
complete -c cloc -l no-autogen -d 'Ignore files generated by code-production systems such as \\s-1GNU\\s0 autoconf'
complete -c cloc -l no-recurse -d 'Count files in the given directories without recursively descending below them'
complete -c cloc -l original-dir -d 'Only effective in combination with --strip-comments'
complete -c cloc -l read-binary-files -d 'Process binary files in addition to text files'
complete -c cloc -l read-lang-def -d 'Load new language processing filters from \\s-1FILE\\s0 and merge them with tho…'
complete -c cloc -l script-lang -d 'Process all files that invoke \\f(CW\\*(C`S\\*(C\' as a \\f(CW\\*(C`#!\\*(C\' scripti…'
complete -c cloc -l sdir -d 'Use \\s-1DIR\\s0 as the scratch directory instead of letting File::Temp chose t…'
complete -c cloc -l skip-leading -d 'Vb 3  Skip the first <N> lines of each file'
complete -c cloc -l skip-uniqueness -d 'Skip the file uniqueness check'
complete -c cloc -l stat -d 'Some file systems (\\s-1AFS,\\s0 CD-ROM, \\s-1FAT, HPFS, SMB\\s0) do not have dir…'
complete -c cloc -l stdin-name -d 'Count lines streamed via \\s-1STDIN\\s0 as if they came from a file named \\s-1F…'
complete -c cloc -l strip-comments -d 'For each file processed, write to the current directory a version of the file…'
complete -c cloc -l strip-str-comments -d 'Replace comment markers embedded in strings with \'xx\''
complete -c cloc -l sum-reports -d 'Input arguments are report files previously created with the --report-file op…'
complete -c cloc -l processes -d '[Available only on systems with a recent version of the Parallel::ForkManager…'
complete -c cloc -l unix -d 'Over-ride the operating system detection logic and run in \\s-1UNIX\\s0 mode'
complete -c cloc -l use-sloccount -d 'If SLOCCount is installed, use its compiled executables c_count, java_count, …'
complete -c cloc -l windows -d 'Over-ride the operating system detection logic and run in Microsoft Windows m…'
complete -c cloc -l exclude-content -d 'Exclude files containing text that matches the given regular expression'
complete -c cloc -l exclude-dir -d 'Exclude the given comma separated directories from being scanned'
complete -c cloc -l exclude-ext -d 'Do not count files having the given file name extensions'
complete -c cloc -l exclude-lang -d 'Exclude the given comma separated languages from being counted'
complete -c cloc -l exclude-list-file -d 'Ignore files and/or directories whose names appear in \\s-1FILE'
complete -c cloc -l fullpath -d 'Modifies the behavior of --match-f or --not-match-f to include the file\'s pat…'
complete -c cloc -l include-ext -d 'Count only languages having the given comma separated file extensions'
complete -c cloc -l include-lang -d 'Count only the given comma separated, case-insensitive languages L1, L2, L3, …'
complete -c cloc -l match-d -d 'Only count files in directories matching the Perl regex.   For example . Sp '
complete -c cloc -l not-match-d -d 'Count all files except in directories matching the Perl regex'
complete -c cloc -l match-f -d 'Only count files whose basenames match the Perl regex'
complete -c cloc -l not-match-f -d 'Count all files except those whose basenames match the Perl regex'
complete -c cloc -l skip-archive -d 'Ignore files that end with the given Perl regular expression'
complete -c cloc -l skip-win-hidden -d 'On Windows, ignore hidden files. SS "Debug Options"'
complete -c cloc -l categorized -d 'Save names of categorized files to \\s-1FILE. \\s0'
complete -c cloc -l counted -d 'Save names of processed source files to \\s-1FILE. \\s0'
complete -c cloc -l diff-alignment -d 'Write to \\s-1FILE\\s0 a list of files and file pairs showing which files were …'
complete -c cloc -l explain -d 'Print the filters used to remove comments for language \\s-1LANG\\s0 and exit'
complete -c cloc -l help -d 'Print cloc\'s internal usage information and exit'
complete -c cloc -l found -d 'Save names of every file found to \\s-1FILE. \\s0'
complete -c cloc -l ignored -d 'Save names of ignored files and the reason they were ignored to \\s-1FILE. \\s0'
complete -c cloc -l print-filter-stages -d 'Print to \\s-1STDOUT\\s0 processed source code before and after each filter is …'
complete -c cloc -l show-ext -d 'Print information about all known (or just the given) file extensions and exit'
complete -c cloc -l show-lang -d 'Print information about all known (or just the given) languages and exit'
complete -c cloc -l show-os -d 'Print the value of the operating system mode and exit'
complete -c cloc -s v -d 'Turn on verbose with optional numeric value'
complete -c cloc -l verbose -d 'Long form of -v'
complete -c cloc -l version -d 'Print the version of this program and exit'
complete -c cloc -l write-lang-def -d 'Writes to \\s-1FILE\\s0 the language processing filters then exits'
complete -c cloc -l write-lang-def-incl-dup -d 'Same as --write-lang-def, but includes duplicated extensions'
complete -c cloc -l 3 -d 'Print third-generation language output'
complete -c cloc -l by-percent -d 'Instead of comment and blank line counts, show these values as percentages ba…'
complete -c cloc -l csv -d 'Write the results as comma separated values'
complete -c cloc -l csv-delimiter -d 'Use the character C as the delimiter for comma separated files instead of ,'
complete -c cloc -l file-encoding -d 'Write output files using the E encoding instead of the default \\s-1ASCII\\s0 (…'
complete -c cloc -l hide-rate -d 'Do not show line and file processing rates in the output header'
complete -c cloc -l json -d 'Write the results in JavaScript Object Notation (\\s-1JSON\\s0)'
complete -c cloc -l md -d 'Write the results as Markdown-formatted text'
complete -c cloc -l out -d 'Synonym for --report-file=FILE'
complete -c cloc -l progress-rate -d 'Show progress update after every N files are processed (default N=100)'
complete -c cloc -l quiet -d 'Suppress all information messages except for the final report'
complete -c cloc -l report-file -d 'Write the results to \\s-1FILE\\s0 instead of standard output'
complete -c cloc -l summary-cutoff -d 'Aggregate to \'Other\' results having X lines below N where X is one of     c  …'
complete -c cloc -l sql -d 'Write results as \\s-1SQL CREATE\\s0 and \\s-1INSERT\\s0 statements which can be …'
complete -c cloc -l sql-append -d 'Append \\s-1SQL\\s0 insert statements to the file specified by --sql and do not…'
complete -c cloc -l sql-project -d 'Use name as the project identifier for the current run'
complete -c cloc -l sql-style -d 'Write \\s-1SQL\\s0 statements in the given style instead of the default SQLite …'
complete -c cloc -l sum-one -d 'For plain text reports, show the \\s-1SUM:\\s0 output line even if only one inp…'
complete -c cloc -l xml -d 'Write the results in \\s-1XML. \\s0'
complete -c cloc -l xsl -d 'Reference \\s-1FILE\\s0 as an \\s-1XSL\\s0 stylesheet within the \\s-1XML\\s0 output'

